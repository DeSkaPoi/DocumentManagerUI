@using System.IO
@using System.Net.Http.Headers
@using System.Reflection.Metadata
@using System.Text.Json
@inject HttpClient Http


<FileEdit Changed="@OnChanged" Written="@OnWritten" Progressed="@OnProgressed" />

@foreach (var file in res)
{
    <img src="@PopulateImageFromStream(file)" height="200px" width="200px">
}

@code {
    string fileContent;
    string imageURL = "";
    string payload;
    List<FileInfoResponse> res = new();

    async Task OnChanged(FileChangedEventArgs e)
    {
        try
        {
            foreach (var file in e.Files)
            {
                var stream = new MemoryStream();
                await file.WriteToStreamAsync(stream);
                byte[] byteArray = stream.ToArray();
                var res = new FileObjectResponse(Guid.Empty, byteArray);
                var response = new FileInfoResponse();
                response.FileObj = res;
                var status = await Http.PostAsJsonAsync("https://localhost:44339/api/FileManagers", response);
                //payload = await status.GetPayload();
                var i = 0;
            }
        }
        catch (Exception exc)
        {
            Console.WriteLine(exc.Message);
        }
        finally
        {
            this.StateHasChanged();
        }
    }

    void OnWritten(FileWrittenEventArgs e)
    {
        Console.WriteLine($"File: {e.File.Name} Position: {e.Position} Data: {Convert.ToBase64String(e.Data)}");
    }

    void OnProgressed(FileProgressedEventArgs e)
    {
        Console.WriteLine($"File: {e.File.Name} Progress: {e.Percentage}");
    }

    protected override async Task OnInitializedAsync()
    {
       res = await GetFiles();
    }

    private async Task<List<FileInfoResponse>> GetFiles()
    {
        return await Http.GetFromJsonAsync<List<FileInfoResponse>>("https://localhost:44339/api/FileManagers");
    }

    private string PopulateImageFromStream(FileInfoResponse file)
    {
        //StateHasChanged();
        var imageURL = $"data:image/jpg;base64,{Convert.ToBase64String(file.FileObj.File)}";
        return imageURL;
    }
}
