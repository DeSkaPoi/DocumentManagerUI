@using ModelDomain
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Threading.Tasks

<EditForm Model="@document" OnValidSubmit="@HandleValidSubmit" class="row g-3 px-2 py-2">
    <DataAnnotationsValidator />
    <Microsoft.AspNetCore.Components.Forms.ValidationSummary />
    <div class="col-10">
        <label for="inputAddress" class="form-label">Title</label>
        <input @bind="document.Title" type="text" class="form-control" id="inputAddress" placeholder="Название Документа" />
    </div>

    <div class="col-10 py-2">
        <label for="inputAddress2" class="form-label">Content</label>
        <input @bind="document.Content" type="text" class="form-control" id="inputAddress2" placeholder="Краткое описание" />
    </div>

    <div class="col-10 py-2 px-0 py-0">
        <label for="inputAddress3" class="form-label col-12">Description</label>
        <div class="col-12 input-group">
            <textarea @bind="document.Description" type="text" class="form-control" aria-label="Подробное описание" placeholder="Подробное описание"></textarea>
        </div>
    </div>

    <div class="col-md-5 py-2">
        <label for="inputCity" class="form-label">CreationTime</label>
        <input @bind="document.CreationTime" type="datetime" disabled="disabled" class="form-control" id="inputCity" />
    </div>

    <div class="col-md-5 py-2">
        <label for="inputZip" class="form-label">LastUpdate</label>
        <input @bind="document.LastUpdate" type="datetime" disabled="disabled" class="form-control" id="inputZip" />
    </div>

    <div class="col-3 subButtom">
        <button type="submit" class="btn btn-primary">Сохранить</button>
    </div>
</EditForm>

@code
{
    [Parameter]
    public string IdDocument { get; set; }
    [Parameter]
    public string BaseURI { get; set; }

    private Document document { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        string uri = string.Concat(BaseURI, IdDocument);
        try
        {
            document = await Http.GetFromJsonAsync<Document>(uri);
        }
        catch (Exception)
        {
            Console.WriteLine("404 - no connection to the server");
        }

    }

    private void HandleValidSubmit()
    {
        // Process the valid form
    }
}
